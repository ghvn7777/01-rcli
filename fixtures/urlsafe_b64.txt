IyBnaXQtY2xpZmYgfiBjb25maWd1cmF0aW9uIGZpbGUKIyBodHRwczovL2dpdC1jbGlmZi5vcmcvZG9jcy9jb25maWd1cmF0aW9uCgpbY2hhbmdlbG9nXQojIGNoYW5nZWxvZyBoZWFkZXIKaGVhZGVyID0gIiIiCiMgQ2hhbmdlbG9nXG4KQWxsIG5vdGFibGUgY2hhbmdlcyB0byB0aGlzIHByb2plY3Qgd2lsbCBiZSBkb2N1bWVudGVkIGluIHRoaXMgZmlsZS4gU2VlIFtjb252ZW50aW9uYWwgY29tbWl0c10oaHR0cHM6Ly93d3cuY29udmVudGlvbmFsY29tbWl0cy5vcmcvKSBmb3IgY29tbWl0IGd1aWRlbGluZXMuXG4KIiIiCiMgdGVtcGxhdGUgZm9yIHRoZSBjaGFuZ2Vsb2cgYm9keQojIGh0dHBzOi8va2VhdHMuZ2l0aHViLmlvL3RlcmEvZG9jcy8jaW50cm9kdWN0aW9uCmJvZHkgPSAiIiIKLS0tCnslIGlmIHZlcnNpb24gJX1cCiAgICB7JSBpZiBwcmV2aW91cy52ZXJzaW9uICV9XAogICAgICAgICMjIFt7eyB2ZXJzaW9uIHwgdHJpbV9zdGFydF9tYXRjaGVzKHBhdD0idiIpIH19XSgkUkVQTy9jb21wYXJlL3t7IHByZXZpb3VzLnZlcnNpb24gfX0uLnt7IHZlcnNpb24gfX0pIC0ge3sgdGltZXN0YW1wIHwgZGF0ZShmb3JtYXQ9IiVZLSVtLSVkIikgfX0KICAgIHslIGVsc2UgJX1cCiAgICAgICAgIyMgW3t7IHZlcnNpb24gfCB0cmltX3N0YXJ0X21hdGNoZXMocGF0PSJ2IikgfX1dIC0ge3sgdGltZXN0YW1wIHwgZGF0ZShmb3JtYXQ9IiVZLSVtLSVkIikgfX0KICAgIHslIGVuZGlmICV9XAp7JSBlbHNlICV9XAogICAgIyMgW3VucmVsZWFzZWRdCnslIGVuZGlmICV9XAp7JSBmb3IgZ3JvdXAsIGNvbW1pdHMgaW4gY29tbWl0cyB8IGdyb3VwX2J5KGF0dHJpYnV0ZT0iZ3JvdXAiKSAlfQogICAgIyMjIHt7IGdyb3VwIHwgc3RyaXB0YWdzIHwgdHJpbSB8IHVwcGVyX2ZpcnN0IH19CiAgICB7JSBmb3IgY29tbWl0IGluIGNvbW1pdHMKICAgIHwgZmlsdGVyKGF0dHJpYnV0ZT0ic2NvcGUiKQogICAgfCBzb3J0KGF0dHJpYnV0ZT0ic2NvcGUiKSAlfQogICAgICAgIC0gKiooe3tjb21taXQuc2NvcGV9fSkqKnslIGlmIGNvbW1pdC5icmVha2luZyAlfSBbKipicmVha2luZyoqXXslIGVuZGlmICV9IFwKICAgICAgICAgICAge3sgY29tbWl0Lm1lc3NhZ2V8dHJpbSB9fSAtIChbe3sgY29tbWl0LmlkIHwgdHJ1bmNhdGUobGVuZ3RoPTcsIGVuZD0iIikgfX1dKCRSRVBPL2NvbW1pdC97eyBjb21taXQuaWQgfX0pKSAtIHt7IGNvbW1pdC5hdXRob3IubmFtZSB9fQogICAgeyUtIGVuZGZvciAtJX0KICAgIHslIHJhdyAlfVxueyUgZW5kcmF3ICV9XAogICAgeyUtIGZvciBjb21taXQgaW4gY29tbWl0cyAlfQogICAgICAgIHslLSBpZiBjb21taXQuc2NvcGUgLSV9CiAgICAgICAgeyUgZWxzZSAtJX0KICAgICAgICAgICAgLSB7JSBpZiBjb21taXQuYnJlYWtpbmcgJX0gWyoqYnJlYWtpbmcqKl17JSBlbmRpZiAlfVwKICAgICAgICAgICAgICAgIHt7IGNvbW1pdC5tZXNzYWdlfHRyaW0gfX0gLSAoW3t7IGNvbW1pdC5pZCB8IHRydW5jYXRlKGxlbmd0aD03LCBlbmQ9IiIpIH19XSgkUkVQTy9jb21taXQve3sgY29tbWl0LmlkIH19KSkgLSB7eyBjb21taXQuYXV0aG9yLm5hbWUgfX0KICAgICAgICB7JSBlbmRpZiAtJX0KICAgIHslIGVuZGZvciAtJX0KeyUgZW5kZm9yICV9XG4KIiIiCiMgdGVtcGxhdGUgZm9yIHRoZSBjaGFuZ2Vsb2cgZm9vdGVyCmZvb3RlciA9ICIiIgo8IS0tIGdlbmVyYXRlZCBieSBnaXQtY2xpZmYgLS0-CiIiIgojIHJlbW92ZSB0aGUgbGVhZGluZyBhbmQgdHJhaWxpbmcgd2hpdGVzcGFjZSBmcm9tIHRoZSB0ZW1wbGF0ZXMKdHJpbSA9IHRydWUKIyBwb3N0cHJvY2Vzc29ycwpwb3N0cHJvY2Vzc29ycyA9IFsKICAgIHsgcGF0dGVybiA9ICdcJFJFUE8nLCByZXBsYWNlID0gImh0dHBzOi8vZ2l0aHViLmNvbS9naHZuNzc3Ny8wMS1yY2xpIiB9LCAjIHJlcGxhY2UgcmVwb3NpdG9yeSBVUkwKXQoKW2dpdF0KIyBwYXJzZSB0aGUgY29tbWl0cyBiYXNlZCBvbiBodHRwczovL3d3dy5jb252ZW50aW9uYWxjb21taXRzLm9yZwpjb252ZW50aW9uYWxfY29tbWl0cyA9IHRydWUKIyBmaWx0ZXIgb3V0IHRoZSBjb21taXRzIHRoYXQgYXJlIG5vdCBjb252ZW50aW9uYWwKZmlsdGVyX3VuY29udmVudGlvbmFsID0gZmFsc2UKIyBwcm9jZXNzIGVhY2ggbGluZSBvZiBhIGNvbW1pdCBhcyBhbiBpbmRpdmlkdWFsIGNvbW1pdApzcGxpdF9jb21taXRzID0gZmFsc2UKIyByZWdleCBmb3IgcHJlcHJvY2Vzc2luZyB0aGUgY29tbWl0IG1lc3NhZ2VzCmNvbW1pdF9wcmVwcm9jZXNzb3JzID0gWwogICAgIyB7IHBhdHRlcm4gPSAnXCgoXHcrXHMpPyMoWzAtOV0rKVwpJywgcmVwbGFjZSA9ICIoWyMkezJ9XShodHRwczovL2dpdGh1Yi5jb20vb3JodW4vZ2l0LWNsaWZmL2lzc3Vlcy8kezJ9KSkifSwgIyByZXBsYWNlIGlzc3VlIG51bWJlcnMKXQojIHJlZ2V4IGZvciBwYXJzaW5nIGFuZCBncm91cGluZyBjb21taXRzCmNvbW1pdF9wYXJzZXJzID0gWwogICAgeyBtZXNzYWdlID0gIlxcW3NraXAiLCBza2lwID0gdHJ1ZSB9LAogICAgeyBtZXNzYWdlID0gIlxccHtIYW59Iiwgc2tpcCA9IHRydWUgfSwKICAgIHsgbWVzc2FnZSA9ICJeZmVhdCIsIGdyb3VwID0gIkZlYXR1cmVzIiB9LAogICAgeyBtZXNzYWdlID0gIl5maXgiLCBncm91cCA9ICJCdWcgRml4ZXMiIH0sCiAgICB7IG1lc3NhZ2UgPSAiXmRvYyIsIGdyb3VwID0gIkRvY3VtZW50YXRpb24iIH0sCiAgICB7IG1lc3NhZ2UgPSAiXnBlcmYiLCBncm91cCA9ICJQZXJmb3JtYW5jZSIgfSwKICAgIHsgbWVzc2FnZSA9ICJecmVmYWN0b3IiLCBncm91cCA9ICJSZWZhY3RvcmluZyIgfSwKICAgIHsgbWVzc2FnZSA9ICJec3R5bGUiLCBncm91cCA9ICJTdHlsZSIgfSwKICAgIHsgbWVzc2FnZSA9ICJecmV2ZXJ0IiwgZ3JvdXAgPSAiUmV2ZXJ0IiB9LAogICAgeyBtZXNzYWdlID0gIl50ZXN0IiwgZ3JvdXAgPSAiVGVzdHMiIH0sCiAgICB7IG1lc3NhZ2UgPSAiXmNob3JlXFwodmVyc2lvblxcKToiLCBza2lwID0gdHJ1ZSB9LAogICAgeyBtZXNzYWdlID0gIl5jaG9yZSIsIGdyb3VwID0gIk1pc2NlbGxhbmVvdXMgQ2hvcmVzIiB9LAogICAgeyBtZXNzYWdlID0gIi4qIiwgZ3JvdXAgPSAiT3RoZXIiIH0sCiAgICB7IGJvZHkgPSAiLipzZWN1cml0eSIsIGdyb3VwID0gIlNlY3VyaXR5IiB9LApdCiMgcHJvdGVjdCBicmVha2luZyBjaGFuZ2VzIGZyb20gYmVpbmcgc2tpcHBlZCBkdWUgdG8gbWF0Y2hpbmcgYSBza2lwcGluZyBjb21taXRfcGFyc2VyCnByb3RlY3RfYnJlYWtpbmdfY29tbWl0cyA9IGZhbHNlCiMgZmlsdGVyIG91dCB0aGUgY29tbWl0cyB0aGF0IGFyZSBub3QgbWF0Y2hlZCBieSBjb21taXQgcGFyc2VycwpmaWx0ZXJfY29tbWl0cyA9IGZhbHNlCiMgcmVnZXggZm9yIG1hdGNoaW5nIGdpdCB0YWdzCnRhZ19wYXR0ZXJuID0gInZbMC05XS4qIgojIHJlZ2V4IGZvciBza2lwcGluZyB0YWdzCnNraXBfdGFncyA9ICJ2MC4xLjAtYmV0YS4xIgojIHJlZ2V4IGZvciBpZ25vcmluZyB0YWdzCmlnbm9yZV90YWdzID0gIiIKIyBzb3J0IHRoZSB0YWdzIHRvcG9sb2dpY2FsbHkKdG9wb19vcmRlciA9IGZhbHNlCiMgc29ydCB0aGUgY29tbWl0cyBpbnNpZGUgc2VjdGlvbnMgYnkgb2xkZXN0L25ld2VzdCBvcmRlcgpzb3J0X2NvbW1pdHMgPSAib2xkZXN0IgojIGxpbWl0IHRoZSBudW1iZXIgb2YgY29tbWl0cyBpbmNsdWRlZCBpbiB0aGUgY2hhbmdlbG9nLgojIGxpbWl0X2NvbW1pdHMgPSA0Mgo
